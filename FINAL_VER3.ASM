.MODEL SMALL
.STACK 64
.DATA
LINE DB "===============================================================================$"
SLINE DB 13,10,"===============================================================================$"
OPTION DB 13,10,"                                     OPTION$"
LOGIN DB 13,10,"1. Login$"
REGISTER DB 13,10,"2. Register$"
GEUST DB 13,10,"3. Continue as guest$"
EXIT DB 13,10,"4. Exit$"
CHOICE DB 13,10,"Enter the action that you wish to proceed (1-4): $"
USER_CHOICE DB 0
ERROR_MSG DB 13,10,"Invalid. Please enter 1 character from 1 to 4 only.$"
LOGIN_MSG DB 13,10,"                                      LOGIN$"
REGISTER_MSG DB 13,10,"                                   Register$"
GEUST_MSG DB 13,10,"Are you sure you want to continue as guest?$"
EXIT_MSG DB 13,10,"Thank you for visiting us. Have a good day.$"
USER DB 4 DUP (0)
PASS DB 4 DUP (0)
REPASS DB 4 DUP (0)
ENTER_USER DB 13,10,"Enter your username: $"
IUSER DB 4 DUP (0)
ENTER_PASS DB 13,10,"Enter your password: $"
IPASS DB 4 DUP (0)
REENTER_PASS DB 13,10,"Reenter your password: $"
IMSG DB 13,10,"Invalid username or password.$"
IMSG2 DB 13,10,"Both password does not match$"
LOGIN_VALID DB 13,10,"Successfully login$"
REGISTER_VALID DB 13,10,"Successfully register$"
SPECIAL_CMD DB 13,10,"*If you wish to return to the main menu, enter 4 ! in any input.$"
BLANK DB 13,10," $"
REASK DB 13,10,"Are you sure you want to proceed as guest?(y/n): $"
USER_NOTE DB 13,10,"*Guest won't have special discount like user.$"
ERROR_MSG2 DB 13,10,"Invalid. Please enter y or n only.$"
MEMBER_STATUS DB 4EH
CATEGORY_MENU   DB 13,10,"ENTER THE OPTION NUMBER "
                DB 13,10,"(1,2,3,4 OR 5) FOR CATEGORY"
                DB 13,10,"1. Sports Shoes"
                DB 13,10,"2. Shorts"
                DB 13,10,"3. Sports equipment"
                DB 13,10,"4. Sportswear T-Shirt"
                DB 13,10,"5. Protective equipment"
                DB 13,10,"6. Exit"
                DB 13,10,"---------------------------"
                DB 13,10,"CATEGORY SELECTION: $"
CATEGORY_SEL    DB 0

SPORTS_SHOES_MENU       DB 13,10,"1. Sneakers - 73.50"
                        DB 13,10,"2. Running Shoes - 75.00"
                        DB 13,10,"3. Basketball Shoes - 77.00"
                        DB 13,10,"4. Training Shoes - 80.00" 
                        DB 13,10,"5. Football Shoes - 83.50"
                        DB 13,10,"---------------------------$"


SHORTS_MENU             DB 13,10,"1. Everlast Boxing Short - 25.00"
                        DB 13,10,"2. Reebok Workout Ready Mens Shorts - 27.50"
                        DB 13,10,"3. Puma Essentials Shorts - 31.70"
                        DB 13,10,"4. Adidas SL Chelsea Sn34 - 35.00"
                        DB 13,10,"5. Nike Sportswear Club Fleece Mens Jersey Shorts - 39.00"
                        DB 13,10,"---------------------------$"


SPORTS_EQUIPMENT_MENU   DB 13,10,"1. Volleyball - 40.00" 
                        DB 13,10,"2. Basketball - 45.50"
                        DB 13,10,"3. Bat - 50.90"
                        DB 13,10,"4. Badminton Racquets - 59.90"
                        DB 13,10,"5. Tennis Racquets - 61.30"
                        DB 13,10,"---------------------------$"
                    

SPORTSWEAR_TSHIRT_MENU  DB 13,10,"1. Hi Tec Performance Mens T Shirt - 55.00"
                        DB 13,10,"2. Nike Icon Futura Men's T Shirt - 60.60"
                        DB 13,10,"3. Puma Run Favourite Short Sleeve Running Mens Tee - 65.00"
                        DB 13,10,"4. Under Armour Motion Ss Tee Sn33 - 69.50"
                        DB 13,10,"5. Adidas Manchester United Home Shirt 2023 - 75.00"
                        DB 13,10,"---------------------------$"
                        

PROTECTIVE_EQUIPMENT_MENU   DB 13,10,"1. Elbow Pads - 30.00"
                            DB 13,10,"2. Shoulder Pads - 37.00"
                            DB 13,10,"3. Shin Pads - 45.50"
                            DB 13,10,"4. Sports glove - 60.80"
                            DB 13,10,"5. Football Helmet - 70.00"
                            DB 13,10,"---------------------------$"
SPACE   DB 13,10,"$"
PRODUCT DB 13,10,"ENTER YOUR OPTION(1-5): $"
CATEGORY_SELECTION DB 13,10,"ENTER YOUR OPTION(1-6): $"
MSG1    DB 13,10,"QUANTITY (10-99): $"
PRICE   DB 0
SHOES1      DB 30
SHOES1_SEN  DB 50
SHOES2      DB 33
SHOES2_SEN  DB 90
SHOES3      DB 35
SHOES3_SEN  DB 70
SHOES4      DB 38
SHOES4_SEN  DB 50
SHOES5      DB 40
SHOES5_SEN  DB 0

SHORTS1     DB 20
SHORTS1_SEN DB 50
SHORTS2     DB 23
SHORTS2_SEN DB 90
SHORTS3     DB 26
SHORTS3_SEN DB 0
SHORTS4     DB 29
SHORTS4_SEN DB 90
SHORTS5     DB 32
SHORTS5_SEN DB 70

SPORTS_EQUIPMENT1     DB 35
SPORTS_EQUIPMENT1_SEN DB 0
SPORTS_EQUIPMENT2     DB 37
SPORTS_EQUIPMENT2_SEN DB 70
SPORTS_EQUIPMENT3     DB 40
SPORTS_EQUIPMENT3_SEN DB 70
SPORTS_EQUIPMENT4     DB 41
SPORTS_EQUIPMENT4_SEN DB 70
SPORTS_EQUIPMENT5     DB 43
SPORTS_EQUIPMENT5_SEN DB 0

SPORTSWEAR1     DB 26
SPORTSWEAR1_SEN DB 0
SPORTSWEAR2     DB 27
SPORTSWEAR2_SEN DB 90
SPORTSWEAR3     DB 30
SPORTSWEAR3_SEN DB 0
SPORTSWEAR4     DB 32
SPORTSWEAR4_SEN DB 50
SPORTSWEAR5     DB 35
SPORTSWEAR5_SEN DB 90

PROTECTIVE_EQUIPEMNT1     DB 39
PROTECTIVE_EQUIPEMNT1_SEN DB 90
PROTECTIVE_EQUIPEMNT2     DB 40
PROTECTIVE_EQUIPEMNT2_SEN DB 90
PROTECTIVE_EQUIPEMNT3     DB 41
PROTECTIVE_EQUIPEMNT3_SEN DB 90
PROTECTIVE_EQUIPEMNT4     DB 42
PROTECTIVE_EQUIPEMNT4_SEN DB 50
PROTECTIVE_EQUIPEMNT5     DB 43
PROTECTIVE_EQUIPEMNT5_SEN DB 0

INVALIDNUM          DB 13,10,"Invalid, Please enter (1-6): $"
INVALIDSELECTION    DB 13,10,"Invalid, Please enter (1-5): $"
INVALIDQNUM         DB 13,10,"Invalid, Please enter (10-99): $"
PRODUCT_SEL         DB 0
PRICE1 DB 0
PRICE2 DB 0 
PRICE3 DB 0
PRICE4 DB 0 
ABSOLUTE_PRICE DB 0
FLOATING_PRICE DB 0
TEN DB 10
HUNDRED DB 100
QUANTITY1 DB 0
QUANTITY2 DB 0 
QUANTITY DB 0
FLOAT_Q1 DB 0
FLOAT_R1 DB 0
FLOAT_VALUE1 DB 0
FLOAT_VALUE2 DB 0
CENT_TOTAL DW 0
CMP_THREE DB 99
CMP_TWO DB 9
UPGRADE_TEN DB 0
UPGRADE DB 0
TOTAL_UPGRADE DW 0
TAX_Q1 DB 0
TAX_R1 DB 0
TAX_VALUE3 DB 0
TAX_VALUE2 DB 0
TAX_VALUE1 DB 0
TAX_FLOAT1 DB 0
TAX_FLOAT2 DB 0
ABSOLUTE_TOTAL DW 0
NEW_ABSOLUTE_TOTAL DW 0
TAX_CENT DB 0
TOTAL_CENT DB 0
ADD_RINGGIT2_EXTEND DB 0
TOTAL_CENT_REMAINDER DB 0
ADD_RINGGIT2 DW 0
NEW_FLOAT_VALUE1 DB 0
NEW_FLOAT_VALUE2 DB 0
EXTEND_TAXQ1 DW 0
NEW_ABS_Q1 DB 0
NEW_ABS_R1 DB 0
NEW_ABS_Q2 DB 0
NEW_VALUE1 DB 0
NEW_VALUE2 DB 0
NEW_VALUE3 DB 0
NEW_VALUE4 DB 0
NEW_VALUE5 DB 0
ABS_Q1 DB 0
ABS_Q2 DB 0
ABS_R1 DB 0
VALUE1 DB 0
VALUE2 DB 0
VALUE3 DB 0
VALUE4 DB 0
VALUE5 DB 0
FLOATING_TOTAL DW 0
MSG2 DB 13,10,"The quantity amount is $"
MSG4 DB 13,10,"The price amount is RM$"
MSG5 DB 13,10,"The absolute price is RM$"
MSG6 DB 13,10,"The tax price is RM$"
MSG7 DB 13,10,"Total is RM$"
DISCOUNT_TOTAL DW 0
TWO DB 2
DISCOUNT_Q1 DB 0
DISCOUNT_R1 DB 0
DISCOUNT_FLOAT1 DB 0
DISCOUNT_FLOAT2 DB 0
DISCOUNT_VALUE1 DB 0
DISCOUNT_VALUE2 DB 0
DISCOUNT_VALUE3 DB 0
DISCOUNT_MSG DB 13,10,"THE DISCOUNT IS RM$"
DISCOUNT_Q2 DB 0
TAX_ABSOLUTE DW 0
DISCOUNT_FLOAT DB 0
ADD_RINGGIT3_EXTEND DB 0
DISCOUNT_CENT_REMAINDER DB 0
ADD_RINGGIT3 DW 0
.CODE
MAIN PROC
 MOV AX,@DATA
 MOV DS,AX

ENTER_CHOICE:
 MOV AH,09H
 LEA DX,SLINE
 INT 21H

 MOV AH,09H
 LEA DX,OPTION
 INT 21H

 MOV AH,09H
 LEA DX,SLINE
 INT 21H

 MOV AH,09H
 LEA DX,LOGIN
 INT 21H

 MOV AH,09H
 LEA DX,REGISTER
 INT 21H

 MOV AH,09H
 LEA DX,GEUST
 INT 21H

 MOV AH,09H
 LEA DX,EXIT
 INT 21H

 MOV AH,09H
 LEA DX,CHOICE
 INT 21H

 MOV AH,01H
 INT 21H

 MOV USER_CHOICE,AL

 MOV AX,0
 MOV AL,USER_CHOICE
 CMP AL,34H
 JA ERROR
 CMP AL,30H
 JBE ERROR
 JMP VALID

ERROR:
 MOV AH,09H
 LEA DX,SLINE
 INT 21H
 MOV AH,09H
 LEA DX,ERROR_MSG
 INT 21H
 JMP ENTER_CHOICE

VALID:
 CMP AL,31H
 JE EXTEND_LOGIN

 CMP AL,32H
 JE EXTEND_REGISTER

 CMP AL,33H
 JE CONFIRMING

 CMP AL,34H
 JE EXTEND_EXIT
;--------------------
CONFIRMING:
 MOV AH,09H
 LEA DX,SLINE
 INT 21H

 MOV AH,09H
 LEA DX,USER_NOTE 
 INT 21H

 MOV AH,09H
 LEA DX,BLANK
 INT 21H

 MOV AH,09H
 LEA DX,REASK   
 INT 21H

 MOV AH,01H
 INT 21H

 CMP AL,59H
 JE EXTEND_CATEGORY

 CMP AL,79H
 JE EXTEND_CATEGORY

 CMP AL,4EH
 JE EXTEND_ENTER_CHOICE

 CMP AL,6EH
 JE EXTEND_ENTER_CHOICE
 JNE ERROR4

EXTEND_ENTER_CHOICE:
 JMP ENTER_CHOICE

ERROR4:
 MOV AH,09H
 LEA DX,ERROR_MSG2
 INT 21H
 JMP CONFIRMING
;-------------------
EXTEND_LOGIN:
 JMP IF_LOGIN

EXTEND_REGISTER:
 JMP IF_REGISTER

EXTEND_EXIT:
 JMP IF_EXIT

EXTEND_CATEGORY:
 JMP CATEGORY
;------------------------

IF_LOGIN:
 MOV AH,09H
 LEA DX,SLINE
 INT 21H

 MOV AH,09H
 LEA DX,LOGIN_MSG
 INT 21H

 MOV AH,09H
 LEA DX,SLINE
 INT 21H

 MOV AH,09H
 LEA DX,SPECIAL_CMD
 INT 21H

 MOV AH,09H
 LEA DX,BLANK
 INT 21H

 MOV AH,09H
 LEA DX,ENTER_USER
 INT 21H

;-INPUT BYTE:01H & MOVE INPUT(AL) TO INAME[SI]
 MOV CX,4
 MOV SI,0
GETNAME:
 MOV AH,01H
 INT 21H
 MOV IUSER[SI],AL
 INC SI
 LOOP GETNAME

 MOV SI,0
 MOV DI,0
CHK_SPECIAL:
 CMP SI,4
 JE EXTEND_SPECIAL

 MOV AL,21H
 CMP IUSER[SI],AL
 JE  SPECIAL
 JNE CONTINUE

SPECIAL:
 INC SI
 JMP CHK_SPECIAL

EXTEND_SPECIAL:
 JMP ENTER_CHOICE

CONTINUE:
 MOV AH,09H
 LEA DX,ENTER_PASS
 INT 21H

;-INPUT BYTE:01H & MOVE INPUT(AL) TO IPSW[DI]
 MOV CX,4
 MOV SI,0
GETPSW:
 MOV AH,01H
 INT 21H
 MOV IPASS[SI],AL
 INC SI
 LOOP GETPSW

 MOV SI,0
 MOV DI,0
CHK_SPECIAL2:
 CMP SI,4
 JE EXTEND_SPECIAL

 MOV AL,21H
 CMP IPASS[SI],AL
 JE  SPECIAL2
 JNE CONTINUE2

SPECIAL2:
 INC SI
 JMP CHK_SPECIAL2

CONTINUE2:
 MOV SI,0
 MOV DI,0
CHKN:
 CMP SI,4
 JE CHKP

 MOV AL,IUSER[SI]
 CMP USER[SI],AL
 JE  NUSER
 JNE ERROR2

NUSER:
 INC SI
 JMP CHKN

ERROR2:
 MOV AH,09H
 LEA DX,SLINE
 INT 21H

 MOV AH,09H
 LEA DX,IMSG
 INT 21H
 JMP IF_LOGIN

CHKP: 
 CMP DI,4
 JE VALID_LOGIN
 MOV AL,IPASS[DI]
 CMP PASS[DI],AL
 JE NPSW
 JNE ERROR2

NPSW:
 INC DI
 JMP CHKP

VALID_LOGIN:
 MOV AH,09H
 LEA DX,SLINE
 INT 21H

 MOV AH,09H
 LEA DX,LOGIN_VALID
 INT 21H

 MOV AH,09H
 LEA DX,SLINE
 INT 21H

 MOV MEMBER_STATUS,59H
 JMP CATEGORY
;---------------------------------------
IF_REGISTER:
 MOV AH,09H
 LEA DX,SLINE
 INT 21H

 MOV AH,09H
 LEA DX,REGISTER_MSG
 INT 21H

 MOV AH,09H
 LEA DX,SLINE
 INT 21H

 MOV AH,09H
 LEA DX,SPECIAL_CMD
 INT 21H

 MOV AH,09H
 LEA DX,BLANK
 INT 21H

 MOV AH,09H
 LEA DX,ENTER_USER
 INT 21H

 MOV CX,4
 MOV SI,0
GETUSER2:
 MOV AH,01H
 INT 21H
 MOV USER[SI],AL
 INC SI
 LOOP GETUSER2

;----------------------------------
 MOV SI,0
 MOV DI,0
CHK_SPECIAL5:
 CMP SI,4
 JE EXTEND_SPECIAL2

 MOV AL,21H
 CMP USER[SI],AL
 JE  SPECIAL5
 JNE CONTINUE5

SPECIAL5:
 INC SI
 JMP CHK_SPECIAL5
;-----------------------------------
CONTINUE5:
REPEAT_PASS:
 MOV AH,09H
 LEA DX,ENTER_PASS
 INT 21H

 MOV CX,4
 MOV SI,0
GETPASS2:
 MOV AH,01H
 INT 21H
 MOV PASS[SI],AL
 INC SI
 LOOP GETPASS2

 MOV AH,09H
 LEA DX,REENTER_PASS
 INT 21H
;----------------------------------
 MOV SI,0
 MOV DI,0
CHK_SPECIAL3:
 CMP SI,4
 JE EXTEND_SPECIAL2

 MOV AL,21H
 CMP PASS[SI],AL
 JE  SPECIAL3
 JNE CONTINUE3

SPECIAL3:
 INC SI
 JMP CHK_SPECIAL3

EXTEND_SPECIAL2:
 JMP ENTER_CHOICE
;-----------------------------------
CONTINUE3:
 MOV CX,4
 MOV SI,0
GETREPASS:
 MOV AH,01H
 INT 21H
 MOV REPASS[SI],AL
 INC SI
 LOOP GETREPASS

;----------------------------------
 MOV SI,0
 MOV DI,0
CHK_SPECIAL4:
 CMP SI,4
 JE EXTEND_SPECIAL2

 MOV AL,21H
 CMP REPASS[SI],AL
 JE  SPECIAL4
 JNE CONTINUE4

SPECIAL4:
 INC SI
 JMP CHK_SPECIAL4
;-----------------------------------
CONTINUE4:
 MOV DI,0
CHKPASS: 
 CMP DI,4
 JE VALID_REGISTER
 MOV AL,REPASS[DI]
 CMP PASS[DI],AL
 JE SAMEPASS
 JNE ERROR3

SAMEPASS:
 INC DI
 JMP CHKPASS

VALID_REGISTER:
 MOV AH,09H
 LEA DX,REGISTER_VALID
 INT 21H
 JMP ENTER_CHOICE

ERROR3:
 MOV AH,09H
 LEA DX,SLINE
 INT 21H

 MOV AH,09H
 LEA DX,IMSG2
 INT 21H

 MOV AH,09H
 LEA DX,SLINE
 INT 21H
 JMP REPEAT_PASS

;--DISPLAY MENU
CATEGORY:
 MOV AH,09H
 LEA DX,CATEGORY_MENU
 INT 21H

 ;--GET USER SELECTION
 MOV AH,09H
 LEA DX,CATEGORY_SELECTION
 INT 21H
 MOV AH,01H
 INT 21H
 MOV CATEGORY_SEL,AL

 ;--VALIDATION
 CMP AL,36H
 JA ERROR5
 CMP AL,30H
 JBE ERROR5
 JMP CATEGORY_VALID

ERROR5:
 MOV AH,09H
 LEA DX,SPACE
 INT 21H
 MOV AH,09H
 LEA DX,INVALIDNUM
 INT 21H
 MOV AH,09H
 LEA DX,SPACE
 INT 21H
 JMP CATEGORY

;--COMPARE SELECTION
CATEGORY_VALID:
 CMP CATEGORY_SEL,"1"
 JE SHOES
 CMP CATEGORY_SEL,"2"
 JE EXTEND_SHORTS
 CMP CATEGORY_SEL,"3"
 JE EXTEND_SPORTS_EQUIPMENT
 CMP CATEGORY_SEL,"4"
 JE EXTEND_SPORTSWEAR
 CMP CATEGORY_SEL,"5"
 JE EXTEND_PROTECTIVE_EQUIPMENT
 CMP CATEGORY_SEL,"6"
 JE EXTEND_EXIT2

EXTEND_SHORTS:
 JMP SHORTS

EXTEND_SPORTSWEAR:
 JMP SPORTSWEAR

EXTEND_SPORTS_EQUIPMENT:
 JMP SPORTS_EQUIPMENT

EXTEND_PROTECTIVE_EQUIPMENT:
 JMP PROTECTIVE_EQUIPMENT

EXTEND_EXIT2:
 JMP IF_EXIT

SHOES:
;--Display shoes menu 
 MOV AH,09H
 LEA DX,SPORTS_SHOES_MENU
 INT 21H
;--GET USER INPUT
 MOV AH,09H
 LEA DX,PRODUCT
 INT 21H
 MOV AH,01H
 INT 21H
 MOV PRODUCT_SEL,AL

 ;--VALIDATION
 CMP PRODUCT_SEL,35H
 JA  SHOES_ERROR
 CMP PRODUCT_SEL,30H
 JBE SHOES_ERROR
 JMP SHOES_VALID

SHOES_ERROR:
 MOV AH,09H
 LEA DX,SPACE
 INT 21H
 MOV AH,09H
 LEA DX,INVALIDSELECTION
 INT 21H
 MOV AH,09H
 LEA DX,SPACE
 INT 21H
 JMP SHOES

;--COMPARE SELECTION
SHOES_VALID:
 CMP PRODUCT_SEL,"1"
 JE GET_SHOES_PRODUCT1
 CMP PRODUCT_SEL,"2"
 JE GET_SHOES_PRODUCT2
 CMP PRODUCT_SEL,"3"
 JE EXTEND_GET_SHOES_PRODUCT3
 CMP PRODUCT_SEL,"4"
 JE EXTEND_GET_SHOES_PRODUCT4
 CMP PRODUCT_SEL,"5"
 JE EXTEND_GET_SHOES_PRODUCT5

EXTEND_GET_SHOES_PRODUCT3:
 JMP GET_SHOES_PRODUCT3

EXTEND_GET_SHOES_PRODUCT4:
 JMP GET_SHOES_PRODUCT4

EXTEND_GET_SHOES_PRODUCT5:
 JMP GET_SHOES_PRODUCT5

;--MOVE PRICE TO AL
GET_SHOES_PRODUCT1:
 MOV AX,0
 MOV AL,SHOES1
 MOV ABSOLUTE_PRICE,AL

 MOV AX,0
 MOV AL,ABSOLUTE_PRICE
 DIV TEN
 MOV PRICE1,AL
 MOV PRICE2,AH
 
 MOV AX,0
 MOV AL,SHOES1_SEN
 MOV FLOATING_PRICE,AL

 MOV AX,0
 MOV AL,FLOATING_PRICE
 DIV TEN
 MOV PRICE3,AL
 MOV PRICE4,AH
 JMP SHOES_QTY

GET_SHOES_PRODUCT2:
 MOV AX,0
 MOV AL,SHOES2
 MOV ABSOLUTE_PRICE,AL

 MOV AX,0
 MOV AL,ABSOLUTE_PRICE
 DIV TEN
 MOV PRICE1,AL
 MOV PRICE2,AH
 
 MOV AX,0
 MOV AL,SHOES2_SEN
 MOV FLOATING_PRICE,AL

 MOV AX,0
 MOV AL,FLOATING_PRICE
 DIV TEN
 MOV PRICE3,AL
 MOV PRICE4,AH
 JMP SHOES_QTY

GET_SHOES_PRODUCT3:
 MOV AX,0
 MOV AL,SHOES3
 MOV ABSOLUTE_PRICE,AL

 MOV AX,0
 MOV AL,ABSOLUTE_PRICE
 DIV TEN
 MOV PRICE1,AL
 MOV PRICE2,AH
 
 MOV AX,0
 MOV AL,SHOES3_SEN
 MOV FLOATING_PRICE,AL

 MOV AX,0
 MOV AL,FLOATING_PRICE
 DIV TEN
 MOV PRICE3,AL
 MOV PRICE4,AH
 JMP SHOES_QTY

GET_SHOES_PRODUCT4:
 MOV AX,0
 MOV AL,SHOES4
 MOV ABSOLUTE_PRICE,AL

 MOV AX,0
 MOV AL,ABSOLUTE_PRICE
 DIV TEN
 MOV PRICE1,AL
 MOV PRICE2,AH
 
 MOV AX,0
 MOV AL,SHOES4_SEN
 MOV FLOATING_PRICE,AL

 MOV AX,0
 MOV AL,FLOATING_PRICE
 DIV TEN
 MOV PRICE3,AL
 MOV PRICE4,AH
 JMP SHOES_QTY

GET_SHOES_PRODUCT5:
 MOV AX,0
 MOV AL,SHOES5
 MOV ABSOLUTE_PRICE,AL

 MOV AX,0
 MOV AL,ABSOLUTE_PRICE
 DIV TEN
 MOV PRICE1,AL
 MOV PRICE2,AH
 
 MOV AX,0
 MOV AL,SHOES5_SEN
 MOV FLOATING_PRICE,AL

 MOV AX,0
 MOV AL,FLOATING_PRICE
 DIV TEN
 MOV PRICE3,AL
 MOV PRICE4,AH
 JMP SHOES_QTY

SHOES_QTY:
;--output string(MSG1)
 MOV AH,09H
 LEA DX,MSG1
 INT 21H
;--INPUT BYTE
 MOV AH,01H
 INT 21H
;--Move user input to QTY1
 MOV QUANTITY1,AL
;--INPUT BYTE
 MOV AH,01H
 INT 21H
;--Move user input to QTY2
 MOV QUANTITY2,AL

;-----------VALIDATION
;--QTY1
 CMP QUANTITY1,"1"
 JB SHOES_QERROR
 CMP QUANTITY1,"9"
 JA SHOES_QERROR

;--QTY2
 CMP QUANTITY2,"0"
 JB SHOES_QERROR
 CMP QUANTITY2,"9"
 JA SHOES_QERROR
 JBE EXTEND_CALCULATOR

EXTEND_CALCULATOR:
 JMP CALCULATOR

;--ERROR MESSAGE FOR QUANTITY
SHOES_QERROR:
 MOV AH,09H
 LEA DX,INVALIDQNUM
 INT 21H
 JMP SHOES_QTY

 SHORTS:
 MOV AH,09H
 LEA DX,SHORTS_MENU
 INT 21H
;--GET USER INPUT
 MOV AH,09H
 LEA DX,PRODUCT
 INT 21H
 MOV AH,01H
 INT 21H
 MOV PRODUCT_SEL,AL

;--VALIDATION
 CMP PRODUCT_SEL,35H
 JA SHORTS_ERROR
 CMP PRODUCT_SEL,30H
 JBE SHORTS_ERROR
 JMP SHORTS_VALID

SHORTS_ERROR:
 MOV AH,09H
 LEA DX,SPACE
 INT 21H
 MOV AH,09H
 LEA DX,INVALIDSELECTION
 INT 21H
 MOV AH,09H
 LEA DX,SPACE
 INT 21H
 JMP SHORTS

;--COMPARE SELECTION
SHORTS_VALID:
 CMP PRODUCT_SEL,"1"
 JE GET_SHORTS_PRODUCT1
 CMP PRODUCT_SEL,"2"
 JE GET_SHORTS_PRODUCT2
 CMP PRODUCT_SEL,"3"
 JE EXTEND_GET_SHORTS_PRODUCT3
 CMP PRODUCT_SEL,"4"
 JE EXTEND_GET_SHORTS_PRODUCT4
 CMP PRODUCT_SEL,"5"
 JE EXTEND_GET_SHORTS_PRODUCT5

EXTEND_GET_SHORTS_PRODUCT3:
 JMP GET_SHORTS_PRODUCT3

EXTEND_GET_SHORTS_PRODUCT4:
 JMP GET_SHORTS_PRODUCT4

EXTEND_GET_SHORTS_PRODUCT5:
 JMP GET_SHORTS_PRODUCT5

GET_SHORTS_PRODUCT1:
 MOV AX,0
 MOV AL,SHORTS1
 MOV ABSOLUTE_PRICE,AL

 MOV AX,0
 MOV AL,ABSOLUTE_PRICE
 DIV TEN
 MOV PRICE1,AL
 MOV PRICE2,AH
 
 MOV AX,0
 MOV AL,SHORTS1_SEN
 MOV FLOATING_PRICE,AL

 MOV AX,0
 MOV AL,FLOATING_PRICE
 DIV TEN
 MOV PRICE3,AL
 MOV PRICE4,AH
 JMP SHORTS_QTY

GET_SHORTS_PRODUCT2:
 MOV AX,0
 MOV AL,SHORTS2
 MOV ABSOLUTE_PRICE,AL

 MOV AX,0
 MOV AL,ABSOLUTE_PRICE
 DIV TEN
 MOV PRICE1,AL
 MOV PRICE2,AH
 
 MOV AX,0
 MOV AL,SHORTS2_SEN
 MOV FLOATING_PRICE,AL

 MOV AX,0
 MOV AL,FLOATING_PRICE
 DIV TEN
 MOV PRICE3,AL
 MOV PRICE4,AH
 JMP SHORTS_QTY

GET_SHORTS_PRODUCT3:
 MOV AX,0
 MOV AL,SHORTS3
 MOV ABSOLUTE_PRICE,AL

 MOV AX,0
 MOV AL,ABSOLUTE_PRICE
 DIV TEN
 MOV PRICE1,AL
 MOV PRICE2,AH
 
 MOV AX,0
 MOV AL,SHORTS3_SEN
 MOV FLOATING_PRICE,AL

 MOV AX,0
 MOV AL,FLOATING_PRICE
 DIV TEN
 MOV PRICE3,AL
 MOV PRICE4,AH
 JMP SHORTS_QTY

GET_SHORTS_PRODUCT4:
 MOV AX,0
 MOV AL,SHORTS4
 MOV ABSOLUTE_PRICE,AL

 MOV AX,0
 MOV AL,ABSOLUTE_PRICE
 DIV TEN
 MOV PRICE1,AL
 MOV PRICE2,AH
 
 MOV AX,0
 MOV AL,SHORTS4_SEN
 MOV FLOATING_PRICE,AL

 MOV AX,0
 MOV AL,FLOATING_PRICE
 DIV TEN
 MOV PRICE3,AL
 MOV PRICE4,AH
 JMP SHORTS_QTY

GET_SHORTS_PRODUCT5:
 MOV AX,0
 MOV AL,SHORTS5
 MOV ABSOLUTE_PRICE,AL

 MOV AX,0
 MOV AL,ABSOLUTE_PRICE
 DIV TEN
 MOV PRICE1,AL
 MOV PRICE2,AH
 
 MOV AX,0
 MOV AL,SHORTS5_SEN
 MOV FLOATING_PRICE,AL

 MOV AX,0
 MOV AL,FLOATING_PRICE
 DIV TEN
 MOV PRICE3,AL
 MOV PRICE4,AH
 JMP SHORTS_QTY

SHORTS_QTY:
;--output string(MSG1)
 MOV AH,09H
 LEA DX,MSG1
 INT 21H
;--INPUT BYTE
 MOV AH,01H
 INT 21H
;--Move user input to QTY1
 MOV QUANTITY1,AL
;--INPUT BYTE
 MOV AH,01H
 INT 21H
;--Move user input to QTY2
 MOV QUANTITY2,AL
;-----------VALIDATION
;--QTY1
 CMP QUANTITY1,"1"
 JB SHORTS_QERROR
 CMP QUANTITY1,"9"
 JA SHORTS_QERROR

;--QTY2
 CMP QUANTITY2,"0"
 JB SHORTS_QERROR
 CMP QUANTITY2,"9"
 JA SHORTS_QERROR
 JBE EXTEND_CALCULATOR2

;--ERROR MESSAGE FOR QUANTITY
SHORTS_QERROR:
 MOV AH,09H
 LEA DX,INVALIDQNUM
 INT 21H
 JMP SHORTS_QTY

EXTEND_CALCULATOR2:
 JMP CALCULATOR

SPORTS_EQUIPMENT:
 MOV AH,09H
 LEA DX,SPORTS_EQUIPMENT_MENU
 INT 21H
;--GET USER INPUT
 MOV AH,09H
 LEA DX,PRODUCT
 INT 21H
 MOV AH,01H
 INT 21H
 MOV PRODUCT_SEL,AL

 ;--VALIDATION
 CMP PRODUCT_SEL,35H
 JA SPORTS_EQUIPMENT_ERROR
 CMP PRODUCT_SEL,30H
 JBE SPORTS_EQUIPMENT_ERROR
 JMP SPORT_EQUIPMENT_VALID

SPORTS_EQUIPMENT_ERROR:
 MOV AH,09H
 LEA DX,SPACE
 INT 21H
 MOV AH,09H
 LEA DX,INVALIDSELECTION
 INT 21H
 MOV AH,09H
 LEA DX,SPACE
 INT 21H
 JMP SPORTS_EQUIPMENT

;--COMPARE SELECTION
SPORT_EQUIPMENT_VALID:
 CMP PRODUCT_SEL,"1"
 JE GET_SPORT_EQUIPMENT_PRODUCT1
 CMP PRODUCT_SEL,"2"
 JE GET_SPORT_EQUIPMENT_PRODUCT2
 CMP PRODUCT_SEL,"3"
 JE EXTEND_GET_SPORT_EQUIPMENT_PRODUCT3
 CMP PRODUCT_SEL,"4"
 JE EXTEND_GET_SPORT_EQUIPMENT_PRODUCT4
 CMP PRODUCT_SEL,"5"
 JE EXTEND_GET_SPORT_EQUIPMENT_PRODUCT5

EXTEND_GET_SPORT_EQUIPMENT_PRODUCT3:
 JMP GET_SPORT_EQUIPMENT_PRODUCT3

EXTEND_GET_SPORT_EQUIPMENT_PRODUCT4:
 JMP GET_SPORT_EQUIPMENT_PRODUCT4

EXTEND_GET_SPORT_EQUIPMENT_PRODUCT5:
 JMP GET_SPORT_EQUIPMENT_PRODUCT5

;--MOVE PRICE TO AL
GET_SPORT_EQUIPMENT_PRODUCT1:
 MOV AX,0
 MOV AL,SPORTS_EQUIPMENT1
 MOV ABSOLUTE_PRICE,AL

 MOV AX,0
 MOV AL,ABSOLUTE_PRICE
 DIV TEN
 MOV PRICE1,AL
 MOV PRICE2,AH
 
 MOV AX,0
 MOV AL,SPORTS_EQUIPMENT1_SEN
 MOV FLOATING_PRICE,AL

 MOV AX,0
 MOV AL,FLOATING_PRICE
 DIV TEN
 MOV PRICE3,AL
 MOV PRICE4,AH
 JMP SPORT_EQUIPMENT_QTY

GET_SPORT_EQUIPMENT_PRODUCT2:
 MOV AX,0
 MOV AL,SPORTS_EQUIPMENT2
 MOV ABSOLUTE_PRICE,AL

 MOV AX,0
 MOV AL,ABSOLUTE_PRICE
 DIV TEN
 MOV PRICE1,AL
 MOV PRICE2,AH
 
 MOV AX,0
 MOV AL,SPORTS_EQUIPMENT2_SEN
 MOV FLOATING_PRICE,AL

 MOV AX,0
 MOV AL,FLOATING_PRICE
 DIV TEN
 MOV PRICE3,AL
 MOV PRICE4,AH
 JMP SPORT_EQUIPMENT_QTY

GET_SPORT_EQUIPMENT_PRODUCT3:
 MOV AX,0
 MOV AL,SPORTS_EQUIPMENT3
 MOV ABSOLUTE_PRICE,AL

 MOV AX,0
 MOV AL,ABSOLUTE_PRICE
 DIV TEN
 MOV PRICE1,AL
 MOV PRICE2,AH
 
 MOV AX,0
 MOV AL,SPORTS_EQUIPMENT3_SEN
 MOV FLOATING_PRICE,AL

 MOV AX,0
 MOV AL,FLOATING_PRICE
 DIV TEN
 MOV PRICE3,AL
 MOV PRICE4,AH
 JMP SPORT_EQUIPMENT_QTY

GET_SPORT_EQUIPMENT_PRODUCT4:
 MOV AX,0
 MOV AL,SPORTS_EQUIPMENT4
 MOV ABSOLUTE_PRICE,AL

 MOV AX,0
 MOV AL,ABSOLUTE_PRICE
 DIV TEN
 MOV PRICE1,AL
 MOV PRICE2,AH
 
 MOV AX,0
 MOV AL,SPORTS_EQUIPMENT4_SEN
 MOV FLOATING_PRICE,AL

 MOV AX,0
 MOV AL,FLOATING_PRICE
 DIV TEN
 MOV PRICE3,AL
 MOV PRICE4,AH
 JMP SPORT_EQUIPMENT_QTY

GET_SPORT_EQUIPMENT_PRODUCT5:
 MOV AX,0
 MOV AL,SPORTS_EQUIPMENT5
 MOV ABSOLUTE_PRICE,AL

 MOV AX,0
 MOV AL,ABSOLUTE_PRICE
 DIV TEN
 MOV PRICE1,AL
 MOV PRICE2,AH
 
 MOV AX,0
 MOV AL,SPORTS_EQUIPMENT5_SEN
 MOV FLOATING_PRICE,AL

 MOV AX,0
 MOV AL,FLOATING_PRICE
 DIV TEN
 MOV PRICE3,AL
 MOV PRICE4,AH
 JMP SPORT_EQUIPMENT_QTY

SPORT_EQUIPMENT_QTY:
;--output string(MSG1)
 MOV AH,09H
 LEA DX,MSG1
 INT 21H
;--INPUT BYTE
 MOV AH,01H
 INT 21H
;--Move user input to QTY1
 MOV QUANTITY1,AL
;--INPUT BYTE
 MOV AH,01H
 INT 21H
;--Move user input to QTY2
 MOV QUANTITY2,AL
;-----------VALIDATION
;--QTY1
 CMP QUANTITY1,"1"
 JB SPORT_EQUIPMENT_QERROR
 CMP QUANTITY1,"9"
 JA SPORT_EQUIPMENT_QERROR

;--QTY2
 CMP QUANTITY2,"0"
 JB SPORT_EQUIPMENT_QERROR
 CMP QUANTITY2,"9"
 JA SPORT_EQUIPMENT_QERROR
 JBE EXTEND_CALCULATOR3

;--ERROR MESSAGE FOR QUANTITY
SPORT_EQUIPMENT_QERROR:
 MOV AH,09H
 LEA DX,INVALIDQNUM
 INT 21H
 JMP SPORT_EQUIPMENT_QTY

EXTEND_CALCULATOR3:
 JMP CALCULATOR

SPORTSWEAR:
 MOV AH,09H
 LEA DX,SPORTSWEAR_TSHIRT_MENU
 INT 21H
;--GET USER INPUT
 MOV AH,09H
 LEA DX,PRODUCT
 INT 21H
 MOV AH,01H
 INT 21H
 MOV PRODUCT_SEL,AL

 ;--VALIDATION
 CMP PRODUCT_SEL,35H
 JA SPORTSWEAR_ERROR
 CMP PRODUCT_SEL,30H
 JBE SPORTSWEAR_ERROR
 JMP SPORTSWEAR_VALID

SPORTSWEAR_ERROR:
 MOV AH,09H
 LEA DX,SPACE
 INT 21H
 MOV AH,09H
 LEA DX,INVALIDSELECTION
 INT 21H
 MOV AH,09H
 LEA DX,SPACE
 INT 21H
 JMP SPORTSWEAR

;--COMPARE SELECTION
SPORTSWEAR_VALID:
 CMP PRODUCT_SEL,"1"
 JE GET_SPORTSWEAR_PRODUCT1
 CMP PRODUCT_SEL,"2"
 JE GET_SPORTSWEAR_PRODUCT2
 CMP PRODUCT_SEL,"3"
 JE EXTEND_GET_SPORTSWEAR_PRODUCT3
 CMP PRODUCT_SEL,"4"
 JE EXTEND_GET_SPORTSWEAR_PRODUCT4
 CMP PRODUCT_SEL,"5"
 JE EXTEND_GET_SPORTSWEAR_PRODUCT5

EXTEND_GET_SPORTSWEAR_PRODUCT3:
 JMP GET_SPORTSWEAR_PRODUCT3

EXTEND_GET_SPORTSWEAR_PRODUCT4:
 JMP GET_SPORTSWEAR_PRODUCT4

EXTEND_GET_SPORTSWEAR_PRODUCT5:
 JMP GET_SPORTSWEAR_PRODUCT5

GET_SPORTSWEAR_PRODUCT1:
 MOV AX,0
 MOV AL,SPORTSWEAR1
 MOV ABSOLUTE_PRICE,AL

 MOV AX,0
 MOV AL,ABSOLUTE_PRICE
 DIV TEN
 MOV PRICE1,AL
 MOV PRICE2,AH
 
 MOV AX,0
 MOV AL,SPORTSWEAR1_SEN
 MOV FLOATING_PRICE,AL

 MOV AX,0
 MOV AL,FLOATING_PRICE
 DIV TEN
 MOV PRICE3,AL
 MOV PRICE4,AH
 JMP SPORTSWEAR_QTY

GET_SPORTSWEAR_PRODUCT2:
 MOV AX,0
 MOV AL,SPORTSWEAR2
 MOV ABSOLUTE_PRICE,AL

 MOV AX,0
 MOV AL,ABSOLUTE_PRICE
 DIV TEN
 MOV PRICE1,AL
 MOV PRICE2,AH
 
 MOV AX,0
 MOV AL,SPORTSWEAR2_SEN
 MOV FLOATING_PRICE,AL

 MOV AX,0
 MOV AL,FLOATING_PRICE
 DIV TEN
 MOV PRICE3,AL
 MOV PRICE4,AH
 JMP SPORTSWEAR_QTY

GET_SPORTSWEAR_PRODUCT3:
 MOV AX,0
 MOV AL,SPORTSWEAR3
 MOV ABSOLUTE_PRICE,AL

 MOV AX,0
 MOV AL,ABSOLUTE_PRICE
 DIV TEN
 MOV PRICE1,AL
 MOV PRICE2,AH
 
 MOV AX,0
 MOV AL,SPORTSWEAR3_SEN
 MOV FLOATING_PRICE,AL

 MOV AX,0
 MOV AL,FLOATING_PRICE
 DIV TEN
 MOV PRICE3,AL
 MOV PRICE4,AH
 JMP SPORTSWEAR_QTY

GET_SPORTSWEAR_PRODUCT4:
 MOV AX,0
 MOV AL,SPORTSWEAR4
 MOV ABSOLUTE_PRICE,AL

 MOV AX,0
 MOV AL,ABSOLUTE_PRICE
 DIV TEN
 MOV PRICE1,AL
 MOV PRICE2,AH
 
 MOV AX,0
 MOV AL,SPORTSWEAR4_SEN
 MOV FLOATING_PRICE,AL

 MOV AX,0
 MOV AL,FLOATING_PRICE
 DIV TEN
 MOV PRICE3,AL
 MOV PRICE4,AH
 JMP SPORTSWEAR_QTY

GET_SPORTSWEAR_PRODUCT5:
 MOV AX,0
 MOV AL,SPORTSWEAR5
 MOV ABSOLUTE_PRICE,AL

 MOV AX,0
 MOV AL,ABSOLUTE_PRICE
 DIV TEN
 MOV PRICE1,AL
 MOV PRICE2,AH
 
 MOV AX,0
 MOV AL,SPORTSWEAR5_SEN
 MOV FLOATING_PRICE,AL

 MOV AX,0
 MOV AL,FLOATING_PRICE
 DIV TEN
 MOV PRICE3,AL
 MOV PRICE4,AH
 JMP SPORTSWEAR_QTY

SPORTSWEAR_QTY:
;--output string(MSG1)
 MOV AH,09H
 LEA DX,MSG1
 INT 21H
;--INPUT BYTE
 MOV AH,01H
 INT 21H
;--Move user input to QTY1
 MOV QUANTITY1,AL
;--INPUT BYTE
 MOV AH,01H
 INT 21H
;--Move user input to QTY2
 MOV QUANTITY2,AL
;-----------VALIDATION
;--QTY1
 CMP QUANTITY1,"1"
 JB SPORTSWEAR_QERROR
 CMP QUANTITY1,"9"
 JA SPORTSWEAR_QERROR

;--QTY2
 CMP QUANTITY2,"0"
 JB SPORTSWEAR_QERROR
 CMP QUANTITY2,"9"
 JA SPORTSWEAR_QERROR
 JBE EXTEND_CALCULATOR4

;--ERROR MESSAGE FOR QUANTITY
SPORTSWEAR_QERROR:
 MOV AH,09H
 LEA DX,INVALIDQNUM
 INT 21H
 JMP SPORTSWEAR_QTY

EXTEND_CALCULATOR4:
 JMP CALCULATOR

PROTECTIVE_EQUIPMENT:
 MOV AH,09H
 LEA DX,PROTECTIVE_EQUIPMENT_MENU
 INT 21H
;--GET USER INPUT
 MOV AH,09H
 LEA DX,PRODUCT
 INT 21H
 MOV AH,01H
 INT 21H
 MOV PRODUCT_SEL,AL

;--VALIDATION
 CMP PRODUCT_SEL,35H
 JA PROTECTIVE_EQUIPMENT_ERROR
 CMP PRODUCT_SEL,30H
 JBE PROTECTIVE_EQUIPMENT_ERROR
 JMP PROTECTIVE_EQUIPMENT_VALID

PROTECTIVE_EQUIPMENT_ERROR:
 MOV AH,09H
 LEA DX,SPACE
 INT 21H
 MOV AH,09H
 LEA DX,INVALIDSELECTION
 INT 21H
 MOV AH,09H
 LEA DX,SPACE
 INT 21H
 JMP PROTECTIVE_EQUIPMENT

;--COMPARE SELECTION
PROTECTIVE_EQUIPMENT_VALID:
 CMP PRODUCT_SEL,"1"
 JE GET_PROTECTIVE_EQUIPMENT_PRODUCT1
 CMP PRODUCT_SEL,"2"
 JE GET_PROTECTIVE_EQUIPMENT_PRODUCT2
 CMP PRODUCT_SEL,"3"
 JE EXTEND_GET_PROTECTIVE_EQUIPMENT_PRODUCT3
 CMP PRODUCT_SEL,"4"
 JE EXTEND_GET_PROTECTIVE_EQUIPMENT_PRODUCT4
 CMP PRODUCT_SEL,"5"
 JE EXTEND_GET_PROTECTIVE_EQUIPMENT_PRODUCT5

EXTEND_GET_PROTECTIVE_EQUIPMENT_PRODUCT3:
 JMP GET_PROTECTIVE_EQUIPMENT_PRODUCT3

EXTEND_GET_PROTECTIVE_EQUIPMENT_PRODUCT4:
 JMP GET_PROTECTIVE_EQUIPMENT_PRODUCT4

EXTEND_GET_PROTECTIVE_EQUIPMENT_PRODUCT5:
 JMP GET_PROTECTIVE_EQUIPMENT_PRODUCT5

GET_PROTECTIVE_EQUIPMENT_PRODUCT1:
 MOV AX,0
 MOV AL,PROTECTIVE_EQUIPEMNT1
 MOV ABSOLUTE_PRICE,AL

 MOV AX,0
 MOV AL,ABSOLUTE_PRICE
 DIV TEN
 MOV PRICE1,AL
 MOV PRICE2,AH
 
 MOV AX,0
 MOV AL,PROTECTIVE_EQUIPEMNT1_SEN
 MOV FLOATING_PRICE,AL

 MOV AX,0
 MOV AL,FLOATING_PRICE
 DIV TEN
 MOV PRICE3,AL
 MOV PRICE4,AH
 JMP PROTECTIVE_EQUIPMENT_QTY

GET_PROTECTIVE_EQUIPMENT_PRODUCT2:
 MOV AX,0
 MOV AL,PROTECTIVE_EQUIPEMNT2
 MOV ABSOLUTE_PRICE,AL

 MOV AX,0
 MOV AL,ABSOLUTE_PRICE
 DIV TEN
 MOV PRICE1,AL
 MOV PRICE2,AH
 
 MOV AX,0
 MOV AL,PROTECTIVE_EQUIPEMNT2_SEN
 MOV FLOATING_PRICE,AL

 MOV AX,0
 MOV AL,FLOATING_PRICE
 DIV TEN
 MOV PRICE3,AL
 MOV PRICE4,AH
 JMP PROTECTIVE_EQUIPMENT_QTY

GET_PROTECTIVE_EQUIPMENT_PRODUCT3:
 MOV AX,0
 MOV AL,PROTECTIVE_EQUIPEMNT3
 MOV ABSOLUTE_PRICE,AL

 MOV AX,0
 MOV AL,ABSOLUTE_PRICE
 DIV TEN
 MOV PRICE1,AL
 MOV PRICE2,AH
 
 MOV AX,0
 MOV AL,PROTECTIVE_EQUIPEMNT3_SEN
 MOV FLOATING_PRICE,AL

 MOV AX,0
 MOV AL,FLOATING_PRICE
 DIV TEN
 MOV PRICE3,AL
 MOV PRICE4,AH
 JMP PROTECTIVE_EQUIPMENT_QTY

GET_PROTECTIVE_EQUIPMENT_PRODUCT4:
 MOV AX,0
 MOV AL,PROTECTIVE_EQUIPEMNT4
 MOV ABSOLUTE_PRICE,AL

 MOV AX,0
 MOV AL,ABSOLUTE_PRICE
 DIV TEN
 MOV PRICE1,AL
 MOV PRICE2,AH
 
 MOV AX,0
 MOV AL,PROTECTIVE_EQUIPEMNT4_SEN
 MOV FLOATING_PRICE,AL

 MOV AX,0
 MOV AL,FLOATING_PRICE
 DIV TEN
 MOV PRICE3,AL
 MOV PRICE4,AH
 JMP PROTECTIVE_EQUIPMENT_QTY

GET_PROTECTIVE_EQUIPMENT_PRODUCT5:
 MOV AX,0
 MOV AL,PROTECTIVE_EQUIPEMNT5
 MOV ABSOLUTE_PRICE,AL

 MOV AX,0
 MOV AL,ABSOLUTE_PRICE
 DIV TEN
 MOV PRICE1,AL
 MOV PRICE2,AH
 
 MOV AX,0
 MOV AL,PROTECTIVE_EQUIPEMNT5_SEN
 MOV FLOATING_PRICE,AL

 MOV AX,0
 MOV AL,FLOATING_PRICE
 DIV TEN
 MOV PRICE3,AL
 MOV PRICE4,AH
 JMP PROTECTIVE_EQUIPMENT_QTY

PROTECTIVE_EQUIPMENT_QTY:
;--output string(MSG1)
 MOV AH,09H
 LEA DX,MSG1
 INT 21H
;--INPUT BYTE
 MOV AH,01H
 INT 21H
;--Move user input to QTY1
 MOV QUANTITY1,AL
;--INPUT BYTE
 MOV AH,01H
 INT 21H
;--Move user input to QTY2
 MOV QUANTITY2,AL
;-----------VALIDATION
;--QTY1
 CMP QUANTITY1,"1"
 JB PROTECTIVE_EQUIPMENT_QERROR
 CMP QUANTITY1,"9"
 JA PROTECTIVE_EQUIPMENT_QERROR

;--QTY2
 CMP QUANTITY2,"0"
 JB PROTECTIVE_EQUIPMENT_QERROR
 CMP QUANTITY2,"9"
 JA PROTECTIVE_EQUIPMENT_QERROR
 JBE CALCULATOR

;--ERROR MESSAGE FOR QUANTITY
PROTECTIVE_EQUIPMENT_QERROR:
 MOV AH,09H
 LEA DX,INVALIDQNUM
 INT 21H
 JMP PROTECTIVE_EQUIPMENT_QTY

CALCULATOR:
 MOV AX,0
 SUB QUANTITY1,30H
 SUB QUANTITY2,30H

 ADD AL,QUANTITY1
 MUL TEN
 ADD AL,QUANTITY2
 MOV QUANTITY,AL

 MOV AX,0
 MOV AL,ABSOLUTE_PRICE
 MOV ABSOLUTE_TOTAL,AX

 MOV AX,0
 MOV AL,FLOATING_PRICE
 MOV FLOATING_TOTAL,AX

 MOV AX,0
 MOV AX,ABSOLUTE_TOTAL
 MUL QUANTITY
 MOV ABSOLUTE_TOTAL,AX

 MOV AX,0
 MOV AX,FLOATING_TOTAL
 MUL QUANTITY
 MOV FLOATING_TOTAL,AX

 MOV AX,0
 MOV AX,FLOATING_TOTAL
 DIV HUNDRED
 MOV FLOAT_Q1,AL
 MOV FLOAT_R1,AH

 MOV AX,0
 MOV AL,FLOAT_R1
 DIV TEN
 MOV FLOAT_VALUE1,AH
 MOV FLOAT_VALUE2,AL

;--------------------------
 MOV AX,0
 MOV AL,FLOAT_R1
 MOV CENT_TOTAL,AX
;------------------------
 MOV AX,0
 MOV AL,FLOAT_Q1
 CMP AL,CMP_TWO
 JA TWO_FLOAT
 JBE ONE_FLOAT

TWO_FLOAT:
 DIV TEN
 MOV UPGRADE_TEN,AL
 MOV UPGRADE,AH

 MOV AX,0
 MOV AL,UPGRADE_TEN
 MUL TEN
 ADD AL,UPGRADE
 MOV TOTAL_UPGRADE,AX
 JMP FLOAT_FINALIZE

ONE_FLOAT:
 MOV TOTAL_UPGRADE,AX
 JMP FLOAT_FINALIZE

FLOAT_FINALIZE:
 MOV AX,0
 MOV BX,0
 MOV BX,TOTAL_UPGRADE
 MOV AX,ABSOLUTE_TOTAL
 ADD AX,BX
 MOV ABSOLUTE_TOTAL,AX
;-------------------------------
 MOV AX,0
 MOV AX,ABSOLUTE_TOTAL
 DIV HUNDRED
 MOV TAX_Q1,AL
 MOV TAX_R1,AH

 MOV AX,0
 MOV AL,TAX_Q1
 CMP AL,CMP_TWO
 JA TAX_TWO_DIGIT
 JBE TAX_ONE_DIGIT

TAX_TWO_DIGIT:
 DIV TEN
 MOV TAX_VALUE3,AL
 MOV TAX_VALUE2,AH
 JMP CONTINUE_CALC

TAX_ONE_DIGIT:
 MOV TAX_VALUE2,AL

CONTINUE_CALC:
 MOV AX,0
 MOV AL,TAX_R1
 DIV TEN
 MOV TAX_VALUE1,AL
 MOV TAX_FLOAT2,AH

 MOV AX,0
 MOV AX,CENT_TOTAL
 DIV TEN
 MOV TAX_FLOAT1,AL
;------------------------------
 MOV AX,0
 MOV AX,ABSOLUTE_TOTAL
 MOV NEW_ABSOLUTE_TOTAL,AX
;------------------------------
 MOV AX,0
 MOV AL,TAX_FLOAT2
 MUL TEN
 ADD AL,TAX_FLOAT1
 MOV TAX_CENT,AL

 MOV AX,0
 MOV AL,TAX_CENT
 ADD AL,FLOAT_R1
 MOV TOTAL_CENT,AL

 MOV AX,0
 MOV AL,TOTAL_CENT
 CMP AL,CMP_THREE
 JA TAX_ADD_RINGGIT
 JBE TAX_CENT_ONLY

TAX_ADD_RINGGIT:
 DIV HUNDRED
 MOV ADD_RINGGIT2_EXTEND,AL
 MOV TOTAL_CENT_REMAINDER,AH

 MOV AX,0
 MOV AL,ADD_RINGGIT2_EXTEND
 MOV ADD_RINGGIT2,AX

 MOV AX,0
 MOV AX,NEW_ABSOLUTE_TOTAL
 ADD AX,ADD_RINGGIT2
 MOV NEW_ABSOLUTE_TOTAL,AX

 MOV AX,0
 MOV AL,TOTAL_CENT_REMAINDER
 DIV TEN
 MOV NEW_FLOAT_VALUE1,AH
 MOV NEW_FLOAT_VALUE2,AL
 JMP CONTINUE_CALC2

 TAX_CENT_ONLY:
 DIV TEN
 MOV NEW_FLOAT_VALUE1,AH
 MOV NEW_FLOAT_VALUE2,AL

 CONTINUE_CALC2:
 MOV AX,0
 MOV AL,TAX_VALUE3
 MUL HUNDRED
 MOV EXTEND_TAXQ1,AX

 MOV AX,0
 MOV AL,TAX_VALUE2
 MUL TEN
 ADD AL,TAX_VALUE1
 ADD EXTEND_TAXQ1,AX

 MOV AX,0
 MOV AX,NEW_ABSOLUTE_TOTAL
 ADD AX,EXTEND_TAXQ1
 MOV NEW_ABSOLUTE_TOTAL,AX
;------------------------------
 MOV AX,0
 MOV AX,NEW_ABSOLUTE_TOTAL
 DIV HUNDRED
 MOV NEW_ABS_Q1,AL
 MOV NEW_ABS_R1,AH

 MOV AX,0
 MOV AL,NEW_ABS_R1
 DIV TEN
 MOV NEW_VALUE1,AH
 MOV NEW_VALUE2,AL

 MOV AX,0
 MOV AL,NEW_ABS_Q1
 CMP AL,CMP_THREE
 JA THREE_DIGIT

 CMP AL,CMP_TWO
 JA TWO_DIGIT
 JBE ONE_DIGIT

THREE_DIGIT:
 DIV TEN
 MOV NEW_ABS_Q2,AL
 MOV NEW_VALUE3,AH

 MOV AX,0
 MOV AL,NEW_ABS_Q2
 DIV TEN
 MOV NEW_VALUE5,AL
 MOV NEW_VALUE4,AH
 JMP CONTINUE_CALC3

TWO_DIGIT:
 DIV TEN
 MOV NEW_VALUE4,AL
 MOV NEW_VALUE3,AH
 JMP CONTINUE_CALC3

ONE_DIGIT:
 MOV NEW_VALUE3,AL
;-------------------------------
CONTINUE_CALC3:
 CMP MEMBER_STATUS,4EH
 JE EXTEND_NO_MEMBER
 JNE YES_MEMBER

EXTEND_NO_MEMBER:
 JMP NO_MEMBER

YES_MEMBER:
 MOV AX,0
 MOV AX,NEW_ABSOLUTE_TOTAL
 MOV TAX_ABSOLUTE,AX

 MOV AX,0
 MOV AL,NEW_FLOAT_VALUE2
 MUL TEN
 ADD AL,NEW_FLOAT_VALUE1
 MOV DISCOUNT_FLOAT,AL

 MOV AX,0
 MOV AL,DISCOUNT_FLOAT
 MUL TWO
 CMP AL,CMP_THREE
 JA DISCOUNT_ADD_RINGGIT
 JBE DISCOUNT_CENT_ONLY

DISCOUNT_ADD_RINGGIT:
 DIV HUNDRED
 MOV ADD_RINGGIT3_EXTEND,AL
 MOV DISCOUNT_CENT_REMAINDER,AH

 MOV AX,0
 MOV AL,ADD_RINGGIT3_EXTEND
 MOV ADD_RINGGIT3,AX

 MOV AX,0
 MOV AX,TAX_ABSOLUTE
 ADD AX,ADD_RINGGIT3
 MOV TAX_ABSOLUTE,AX

 MOV AX,0
 MOV AL,DISCOUNT_CENT_REMAINDER
 DIV TEN
 MOV DISCOUNT_FLOAT1,AL
 JMP CONTINUE_CALC5

DISCOUNT_CENT_ONLY:
 DIV TEN
 MOV DISCOUNT_FLOAT1,AL

CONTINUE_CALC5:
 MOV AX,0
 MOV BX,2
 MOV AX,TAX_ABSOLUTE
 MUL BX
 MOV DISCOUNT_TOTAL,AX

 MOV AX,0
 MOV AX,DISCOUNT_TOTAL
 DIV HUNDRED
 MOV DISCOUNT_Q1,AL
 MOV DISCOUNT_R1,AH

 MOV AX,0
 MOV AL,DISCOUNT_Q1
 CMP AL,CMP_TWO
 JA DISCOUNT_TWO_DIGIT
 JBE DISCOUNT_ONE_DIGIT

DISCOUNT_TWO_DIGIT:
 DIV TEN
 MOV DISCOUNT_VALUE3,AL
 MOV DISCOUNT_VALUE2,AH
 JMP CONTINUE_CALC4

DISCOUNT_ONE_DIGIT:
 MOV DISCOUNT_VALUE2,AL

CONTINUE_CALC4:
 MOV AX,0
 MOV AL,DISCOUNT_R1
 DIV TEN
 MOV DISCOUNT_VALUE1,AL
 MOV DISCOUNT_FLOAT2,AH

NO_MEMBER:
;-------------------------------
 MOV AX,0
 MOV AX,ABSOLUTE_TOTAL
 DIV HUNDRED
 MOV ABS_Q1,AL
 MOV ABS_R1,AH

 MOV AX,0
 MOV AL,ABS_R1
 DIV TEN
 MOV VALUE1,AH
 MOV VALUE2,AL

 MOV AX,0
 MOV AL,ABS_Q1
 CMP AL,CMP_THREE
 JA THREE_DIGIT2

 CMP AL,CMP_TWO
 JA TWO_DIGIT2
 JBE ONE_DIGIT2

THREE_DIGIT2:
 DIV TEN
 MOV ABS_Q2,AL
 MOV VALUE3,AH

 MOV AX,0
 MOV AL,ABS_Q2
 DIV TEN
 MOV VALUE5,AL
 MOV VALUE4,AH
 JMP ADDING

TWO_DIGIT2:
 DIV TEN
 MOV VALUE4,AL
 MOV VALUE3,AH
 JMP ADDING

ONE_DIGIT2:
 MOV VALUE3,AL

ADDING:
 ADD QUANTITY1,30H
 ADD QUANTITY2,30H
 ADD PRICE1,30H
 ADD PRICE2,30H
 ADD PRICE3,30H
 ADD PRICE4,30H
 ADD VALUE1,30H
 ADD VALUE2,30H
 ADD VALUE3,30H
 ADD VALUE4,30H
 ADD VALUE5,30H
 ADD FLOAT_VALUE1,30H
 ADD FLOAT_VALUE2,30H
 ADD TAX_VALUE1,30H
 ADD TAX_VALUE2,30H
 ADD TAX_VALUE3,30H
 ADD TAX_FLOAT1,30H
 ADD TAX_FLOAT2,30H
 ADD NEW_VALUE1,30H
 ADD NEW_VALUE2,30H
 ADD NEW_VALUE3,30H
 ADD NEW_VALUE4,30H
 ADD NEW_VALUE5,30H
 ADD NEW_FLOAT_VALUE2,30H
 ADD NEW_FLOAT_VALUE1,30H
 ADD DISCOUNT_FLOAT2,30H
 ADD DISCOUNT_FLOAT1,30H
 ADD DISCOUNT_VALUE3,30H
 ADD DISCOUNT_VALUE2,30H
 ADD DISCOUNT_VALUE1,30H
;---------------------------------------------
 MOV AH,09H
 LEA DX,MSG2
 INT 21H

 MOV AH,02H
 MOV DL,QUANTITY1
 INT 21H

 MOV AH,02H
 MOV DL,QUANTITY2
 INT 21H

 MOV AH,09H
 LEA DX,MSG4
 INT 21H

 MOV AH,02H
 MOV DL,PRICE1
 INT 21H

 MOV AH,02H
 MOV DL,PRICE2
 INT 21H

 MOV AH,02H
 MOV DL,"."
 INT 21H

 MOV AH,02H
 MOV DL,PRICE3
 INT 21H

 MOV AH,02H
 MOV DL,PRICE4
 INT 21H

 MOV AH,09H
 LEA DX,MSG5
 INT 21H

 MOV AH,02H
 MOV DL,VALUE5
 INT 21H

 MOV AH,02H
 MOV DL,VALUE4
 INT 21H

 MOV AH,02H
 MOV DL,VALUE3
 INT 21H

 MOV AH,02H
 MOV DL,VALUE2
 INT 21H

 MOV AH,02H
 MOV DL,VALUE1
 INT 21H

 MOV AH,02H
 MOV DL,"."
 INT 21H

 MOV AH,02H
 MOV DL,FLOAT_VALUE2
 INT 21H

 MOV AH,02H
 MOV DL,FLOAT_VALUE1
 INT 21H

 MOV AH,09H
 LEA DX,MSG6
 INT 21H

 MOV AH,02H
 MOV DL,TAX_VALUE3
 INT 21H

 MOV AH,02H
 MOV DL,TAX_VALUE2
 INT 21H

 MOV AH,02H
 MOV DL,TAX_VALUE1
 INT 21H

 MOV AH,02H
 MOV DL,"."
 INT 21H

 MOV AH,02H
 MOV DL,TAX_FLOAT2
 INT 21H

 MOV AH,02H
 MOV DL,TAX_FLOAT1
 INT 21H

 MOV AH,09H
 LEA DX,MSG7
 INT 21H

 MOV AH,02H
 MOV DL,NEW_VALUE5
 INT 21H

 MOV AH,02H
 MOV DL,NEW_VALUE4
 INT 21H

 MOV AH,02H
 MOV DL,NEW_VALUE3
 INT 21H

 MOV AH,02H
 MOV DL,NEW_VALUE2
 INT 21H

 MOV AH,02H
 MOV DL,NEW_VALUE1
 INT 21H

 MOV AH,02H
 MOV DL,"."
 INT 21H

 MOV AH,02H
 MOV DL,NEW_FLOAT_VALUE2
 INT 21H

 MOV AH,02H
 MOV DL,NEW_FLOAT_VALUE1
 INT 21H

 MOV AH,09H
 LEA DX,DISCOUNT_MSG
 INT 21H

 MOV AH,02H
 MOV DL,DISCOUNT_VALUE3
 INT 21H

 MOV AH,02H
 MOV DL,DISCOUNT_VALUE2
 INT 21H

 MOV AH,02H
 MOV DL,DISCOUNT_VALUE1
 INT 21H

 MOV AH,02H
 MOV DL,"."
 INT 21H

 MOV AH,02H
 MOV DL,DISCOUNT_FLOAT2
 INT 21H

 MOV AH,02H
 MOV DL,DISCOUNT_FLOAT1
 INT 21H

IF_EXIT:
 MOV AH,09H
 LEA DX,EXIT_MSG
 INT 21H

 MOV AH,4CH
 INT 21H
MAIN ENDP
 END MAIN
